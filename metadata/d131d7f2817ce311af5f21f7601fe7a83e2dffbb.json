{"title":"Advanced_MAXScript_1-The_Matrix_Explained","uid":6815758,"size":1416114438,"categoryP":"video","categoryS":"other","magnet":"?xt=urn:btih:d131d7f2817ce311af5f21f7601fe7a83e2dffbb&amp;dn=Advanced_MAXScript_1-The_Matrix_Explained&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":1,"uploader":"Aquamonkey","files":36,"time":1321196825,"description":"Ch01: Vectors: The Basics\nIn the first chapter Bobo gives an introduction to the concept of 1 and 2 dimensional vectors, Vector addition and multiplication.\n\nCh02: 3 Dimensional Vectors\nWe move on to 3 Dimensional Vectors and treating RGB colour space as a Vector.\n\nCh03: Unit Vectors\nBobo explains the importance of Unit Vectors and shows a practical application within a scripted PFlow Operator.\n\nCh04: Trigonometry &amp; Vector Operations\nMoving on from Vectors we look a trigonometry and how the sine and cosine functions relate to angles and vectors. We also look at vector dot and cross products.\n\nCh05: Barycentric Coordinates\nWe look at how a position on a triangular face can be specified via barycentric coordinates.\n\nCh06: Ray Intersections\nIn this chapter we look at the MAXscript Ray and RayEx. functions and how they can be used to find collisions within 3D space.\n\nCh07: The Matrix: Explained\nThe Matrix... here Bobo explains the basics of how a matrix is used within 3D software to store a nodes position in space, its rotation and also its scale and shows how nodes and PFlow particles can be aligned using their Matrices.\n\nCh08: The Matrix: Continued\nContinuing with Matrices we look at how we can determine if two objects face towards each other and how to rotate an object within another objects transform space.\n\nCh09: Vectors and Matrix3 Values\nWe look at how we can convert a single vector into a full Matrix, also the same but with an up vector and more.\n\nCh10: Sub-object Transformations\nWe look at controlling Modifier Gizmo's position and orientation using its matrix and how this can be used to slice many objects with the same plane at the same time.\n\nCh11: Camera &amp; View Transform Matrix\nBobo explores the fact that any scene camera has its own transform matrix and how this can be used to determine all objects in front or behind the camera.\n\nCh12: A Basic Rendering Pipeline\nWe start our end project, constructing a fully functional scripted rendering system. First we implement a basic diffuse shading model and also Z-Depth testing.\n\nCh13: Implementing Textures\nThen we move on to support textures within our shading model and also ambient light.\n\nCh14: Phong And Blinn Highlights\nWe look at how Phong and Blinn highlights are calculated and then we implement Blinn highlights.\n\nCh15: Implementing Shadows/Reflections\nAnd we complete our rendering system by adding ray traced shadows and final ray traced reflections.","torrent":{"xt":"urn:btih:d131d7f2817ce311af5f21f7601fe7a83e2dffbb","amp;dn":"Advanced_MAXScript_1-The_Matrix_Explained","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"d131d7f2817ce311af5f21f7601fe7a83e2dffbb","infoHashBuffer":{"type":"Buffer","data":[209,49,215,242,129,124,227,17,175,95,33,247,96,31,231,168,62,45,255,187]},"announce":[],"urlList":[]}}